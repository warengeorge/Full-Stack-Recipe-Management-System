{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Recipe API",
    "description": "This is a REST API application made with Express and documented with Swagger"
  },
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/recipes/": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get a list of paginated recipes",
        "description": "Get a list of paginated recipes",
        "parameters": [
          {
            "name": "page",
            "description": "Page number",
            "type": "integer",
            "in": "query"
          },
          {
            "name": "limit",
            "description": "Number of items per page",
            "type": "integer",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipes"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create a new recipe",
        "description": "Create a new recipe",
        "parameters": [
          {
            "name": "body",
            "description": "Recipe details",
            "type": "object",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Created recipe"
          },
          "400": {
            "description": "Invalid recipe details"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/recipes/{id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get a single recipe by ID",
        "description": "Get a single recipe by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe details"
          },
          "404": {
            "description": "Recipe not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update a recipe by ID",
        "description": "Update a recipe by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "body",
            "description": "Recipe details",
            "type": "object",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated recipe"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Recipe not updated"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete a recipe by ID",
        "description": "Delete a recipe by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted"
          },
          "404": {
            "description": "Recipe not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}